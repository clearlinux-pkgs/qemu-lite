commit eda2a8dec935f40e4cc293d0409efc8caac8adee
Author: Anthony Xu <anthony.xu@intel.com>
Date:   Wed Apr 6 11:12:09 2016 -0700

        Add E820 PRAM type, that nvdimm can be detected through E820
    
        Author: Haozhong Zhang <haozhong.zhang@intel.com>
    
        Signed-off-by: Anthony Xu <anthony.xu@intel.com>

diff --git a/hw/i386/pc.c b/hw/i386/pc.c
index 2ac97c4..8f0e3ea 100644
--- a/hw/i386/pc.c
+++ b/hw/i386/pc.c
@@ -67,6 +67,7 @@
 #include "qapi/visitor.h"
 #include "qapi-visit.h"
 #include "qom/cpu.h"
+#include "hw/mem/nvdimm.h"
 
 /* debug PC/ISA interrupts */
 //#define DEBUG_IRQ
@@ -1595,15 +1596,17 @@ static void pc_dimm_plug(HotplugHandler *hotplug_dev,
     PCMachineState *pcms = PC_MACHINE(hotplug_dev);
     PCMachineClass *pcmc = PC_MACHINE_GET_CLASS(pcms);
     PCDIMMDevice *dimm = PC_DIMM(dev);
+    bool is_nvdimm = (object_dynamic_cast(OBJECT(dev), TYPE_NVDIMM) != NULL);
     PCDIMMDeviceClass *ddc = PC_DIMM_GET_CLASS(dimm);
     MemoryRegion *mr = ddc->get_memory_region(dimm);
     uint64_t align = TARGET_PAGE_SIZE;
+    FWCfgState *fw_cfg = fw_cfg_find();
 
     if (memory_region_get_alignment(mr) && pcmc->enforce_aligned_dimm) {
         align = memory_region_get_alignment(mr);
     }
 
-    if (!pcms->acpi_dev) {
+    if (!pcms->acpi_dev && !is_nvdimm) {
         error_setg(&local_err,
                    "memory hotplug is not enabled: missing acpi device");
         goto out;
@@ -1614,6 +1617,28 @@ static void pc_dimm_plug(HotplugHandler *hotplug_dev,
         goto out;
     }
 
+    if (is_nvdimm && fw_cfg) {
+        uint64_t addr = object_property_get_int(OBJECT(dev),
+                                                PC_DIMM_ADDR_PROP, NULL);
+        uint64_t size = object_property_get_int(OBJECT(dev),
+                                                PC_DIMM_SIZE_PROP, NULL);
+
+        if (e820_add_entry(addr, size, E820_PRAM) < 0) {
+            error_setg(&local_err,
+                       "failed to add E820_PRAM entry: "
+                       "addr %"PRIx64", size %"PRIx64,
+                       addr, size);
+            return;
+        }
+
+        fw_cfg_modify_file(fw_cfg, "etc/e820", e820_table,
+                           sizeof(struct e820_entry) * e820_entries);
+
+        if (!pcms->acpi_dev) {
+            return;
+        }
+    }
+
     hhc = HOTPLUG_HANDLER_GET_CLASS(pcms->acpi_dev);
     hhc->plug(HOTPLUG_HANDLER(pcms->acpi_dev), dev, &error_abort);
 out:
diff --git a/include/hw/i386/pc.h b/include/hw/i386/pc.h
index 96f0b66..a5fd27e 100644
--- a/include/hw/i386/pc.h
+++ b/include/hw/i386/pc.h
@@ -351,6 +351,7 @@ uint16_t pvpanic_port(void);
 #define E820_ACPI       3
 #define E820_NVS        4
 #define E820_UNUSABLE   5
+#define E820_PRAM       12
 
 int e820_add_entry(uint64_t, uint64_t, uint32_t);
 int e820_get_num_entries(void);
