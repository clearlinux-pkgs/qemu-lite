commit f05e4353fa619d1a9efab3b0b842225f23983140
Author: Anthony Xu <anthony.xu@intel.com>
Date:   Wed Apr 6 11:18:07 2016 -0700

        disable smm
    
        Signed-off-by: Anthony Xu <anthony.xu@intel.com>

diff --git a/hw/pci-host/q35.c b/hw/pci-host/q35.c
index 70f897e..1f99231 100644
--- a/hw/pci-host/q35.c
+++ b/hw/pci-host/q35.c
@@ -288,6 +288,7 @@ static void mch_update_pam(MCHPCIState *mch)
 /* SMRAM */
 static void mch_update_smram(MCHPCIState *mch)
 {
+#if 0 //diable smm
     PCIDevice *pd = PCI_DEVICE(mch);
     bool h_smrame = (pd->config[MCH_HOST_BRIDGE_ESMRAMC] & MCH_HOST_BRIDGE_ESMRAMC_H_SMRAME);
     uint32_t tseg_size;
@@ -354,6 +355,7 @@ static void mch_update_smram(MCHPCIState *mch)
                                    mch->below_4g_mem_size - tseg_size);
 
     memory_region_transaction_commit();
+#endif
 }
 
 static void mch_write_config(PCIDevice *d,
@@ -456,7 +458,7 @@ static void mch_realize(PCIDevice *d, Error **errp)
     /* setup pci memory mapping */
     pc_pci_as_mapping_init(OBJECT(mch), mch->system_memory,
                            mch->pci_address_space);
-
+#if 0 //diable smm
     /* if *disabled* show SMRAM to all CPUs */
     memory_region_init_alias(&mch->smram_region, OBJECT(mch), "smram-region",
                              mch->pci_address_space, 0xa0000, 0x20000);
@@ -497,7 +499,7 @@ static void mch_realize(PCIDevice *d, Error **errp)
                                 &mch->tseg_window);
     object_property_add_const_link(qdev_get_machine(), "smram",
                                    OBJECT(&mch->smram), &error_abort);
-
+#endif
     init_pam(DEVICE(mch), mch->ram_memory, mch->system_memory,
              mch->pci_address_space, &mch->pam_regions[0],
              PAM_BIOS_BASE, PAM_BIOS_SIZE);
diff --git a/target-i386/kvm.c b/target-i386/kvm.c
index f0b17cc..ecbdf5a 100644
--- a/target-i386/kvm.c
+++ b/target-i386/kvm.c
@@ -112,7 +112,9 @@ int kvm_has_pit_state2(void)
 
 bool kvm_has_smm(void)
 {
-    return kvm_check_extension(kvm_state, KVM_CAP_X86_SMM);
+    //disable smm
+    return false;
+//    return kvm_check_extension(kvm_state, KVM_CAP_X86_SMM);
 }
 
 bool kvm_allows_irq0_override(void)
@@ -1159,7 +1161,7 @@ int kvm_arch_init(MachineState *ms, KVMState *s)
         }
     }
 
-    if (kvm_check_extension(s, KVM_CAP_X86_SMM)) {
+    if (kvm_has_smm()) {
         smram_machine_done.notify = register_smram_listener;
         qemu_add_machine_init_done_notifier(&smram_machine_done);
     }
